import { Ch5SignalElementAttributeRegistryEntries } from "../ch5-common/ch5-signal-attribute-registry";
import { TCh5ToggleHandleShape, TCh5ToggleOrientation, TCh5ToggleSize, TCh5ToggleFeedbackMode } from './interfaces/t-ch5-toggle';
import { ICh5ToggleAttributes } from './interfaces/i-ch5-toggle-attributes';
import { ICh5PropertySettings } from "../ch5-core/ch5-property";
import { Ch5CommonInput } from "../ch5-common-input/ch5-common-input";
export declare class Ch5Toggle extends Ch5CommonInput implements ICh5ToggleAttributes {
    static readonly HANDLE_SHAPE: TCh5ToggleHandleShape[];
    static readonly ORIENTATION: TCh5ToggleOrientation[];
    static readonly SIZES: TCh5ToggleSize[];
    static MODES: TCh5ToggleFeedbackMode[];
    static readonly COMPONENT_DATA: any;
    static readonly SIGNAL_ATTRIBUTE_TYPES: Ch5SignalElementAttributeRegistryEntries;
    static readonly COMPONENT_PROPERTIES: ICh5PropertySettings[];
    static readonly ELEMENT_NAME = "ch5-toggle";
    primaryCssClass: string;
    changeEvent: Event;
    cleanEvent: Event;
    dirtyEvent: Event;
    protected _dirtyTimerHandle: number | null;
    protected _dirty: boolean;
    protected _clean: boolean;
    private _ch5Properties;
    private _elContainer;
    private _elBody;
    private _elLabel;
    private _elHandle;
    private _elIconOn;
    private _elIconOff;
    private _elLabelOn;
    private _elLabelOff;
    private _elOnContainer;
    private _elOffContainer;
    private _elKnob;
    set handleShape(value: TCh5ToggleHandleShape);
    get handleShape(): TCh5ToggleHandleShape;
    set label(value: string);
    get label(): string;
    set labelOn(value: string);
    get labelOn(): string;
    set labelOff(value: string);
    get labelOff(): string;
    set iconOn(value: string);
    get iconOn(): string;
    set iconOff(value: string);
    get iconOff(): string;
    set orientation(value: TCh5ToggleOrientation);
    get orientation(): TCh5ToggleOrientation;
    set value(value: boolean);
    get value(): boolean;
    set size(value: TCh5ToggleSize);
    get size(): TCh5ToggleSize;
    set receiveStateValue(value: string);
    get receiveStateValue(): string;
    set receiveStateScriptLabelHTML(value: string);
    get receiveStateScriptLabelHTML(): string;
    set sendEventOnClick(value: string);
    get sendEventOnClick(): string;
    set sendEventOnTouch(value: string);
    get sendEventOnTouch(): string;
    static registerSignalAttributeTypes(): void;
    static registerCustomElement(): void;
    constructor();
    static get observedAttributes(): string[];
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected createInternalHtml(): void;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected removeEventListeners(): void;
    protected unsubscribeFromSignals(): void;
    private clearComponentContent;
    private handleHandleShape;
    private handleLabel;
    private handleIconOn;
    private handleIconOff;
    private handleOrientation;
    private handleSize;
    private handleSendEventOnClick;
    private updateCssClass;
    private handleClick;
    private _dispatchEvents;
    private addAriaAttributes;
    private handleValue;
    private setDirtyHandler;
    private valueSync;
    protected getTargetElementForCssClassesAndStyle(): HTMLElement;
    getCssClassDisabled(): string;
    submit(): void;
    reset(): void;
    toggleChecked(): void;
    getDirty(): boolean;
    setDirty(): void;
    setClean(): void;
}
