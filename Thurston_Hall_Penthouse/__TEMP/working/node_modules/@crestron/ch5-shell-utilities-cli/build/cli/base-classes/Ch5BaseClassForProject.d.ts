import { Ch5BaseClassForCliCreate } from "../Ch5BaseClassForCliCreate";
export declare class Ch5BaseClassForProject extends Ch5BaseClassForCliCreate {
    showOutputMessages: boolean;
    private readonly CLI_SHELL_FOLDER;
    private readonly CLI_TEMPLATES_SHELL_FOLDER;
    private readonly CLI_TEMPLATES_ZOOM_ROOM_CONTROL_FOLDER;
    private readonly PROJECT_CONFIG_JSON_PATH;
    private readonly VSCODE_SCHEMA_JSON_PATH;
    private _outputResponse;
    private _configFilePath;
    /**
     * Constructor
     */
    constructor(showOutputMessages?: boolean);
    /**
     * Initialize process
     */
    initialize(): any;
    validateCLIInputArgument(inputObj: any): {
        value: any;
        warning: string;
    } | {
        value: null;
        warning: any;
    } | {
        value: string;
        warning: any;
    };
    private validateProjectType;
    private validatePackageJsonProjectName;
    private containsSpecialCharsInPackageName;
    protected printWarningsOnVerifiedInputs(): void;
    protected getConfigFileSchemaPath(): any;
    protected addUpdatedInputs(inputUpdateValue: any): void;
    protected validateAndSetReceivedInputValues(): void;
    protected askQuestionsToUser(taskType: string): Promise<void>;
    protected getProjectName(): any;
    protected setProjectVariables(): any;
    protected traverseAndValidateProjectFolderAndVariables(): Promise<void>;
    protected removeFolderInProject(folderName: string): void;
    protected removeFileInProject(fileName: string): void;
    protected copyZoomFolderToProject(folderName: string): void;
    protected copyZoomFileToProject(fileName: string): void;
    protected copyShellFolderToProject(folderName: string): void;
    protected copyShellFileToProject(fileName: string): void;
    protected copyShellFolderContentsToProjectFolder(): void;
    protected renamePackageJsonFile(): void;
    protected setFilesAsPerProjectType(): void;
    protected updateFilesAsPerProjectType(): void;
    protected getShellTemplateProjectConfigPath(): any;
    protected setValueInPackageJson(key: string, value: any): void;
    protected removeZoomPackageDependency(): void;
    protected addZoomPackageDependency(filePathZoomPackageJson: string): void;
    protected getCreatedOrUpdateProjectPathProjectConfigJsonFile(): any;
    protected getCreatedOrUpdateProjectPathProjectConfigJsonSchemaFile(): any;
    protected makeDirectoryForCreateProject(projectName: string): void;
    protected isCreateOrUpdateBasedOnConfigJson(): boolean;
    protected getConfigJsonFilePath(): string;
    getOutputResponse(): any;
    protected getDateInStringFormat(): string;
    protected createBackupForExistingProject(): Promise<void>;
    protected getConfirmation(): Promise<boolean>;
    protected doubleDigit(input: number): string;
}
