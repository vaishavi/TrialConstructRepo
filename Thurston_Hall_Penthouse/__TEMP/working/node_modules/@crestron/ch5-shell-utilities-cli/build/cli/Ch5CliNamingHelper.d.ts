export declare class Ch5CliNamingHelper {
    /**
     * Converts a camelized string into all lower case separated by underscores.
     * decamelize('innerHTML');         // 'inner_html'
     * decamelize('action_name');       // 'action_name'
     * decamelize('css-class-name');    // 'css-class-name'
     * decamelize('my favorite items'); // 'my favorite items'
     * @method decamelize
     * @param {String} str The string to decamelize.
     * @return {String} the decamelized string.
     */
    decamelize(str: string): string;
    /**
     *
     * @param {string} str Input string for removing spaces
     */
    removeAllSpaces(str: string): string;
    /**
     * Replaces underscores, spaces, or camelCase with dashes.
     * dasherize('innerHTML');         // 'inner-html'
     * dasherize('action_name');       // 'action-name'
     * dasherize('css-class-name');    // 'css-class-name'
     * dasherize('my favorite items'); // 'my-favorite-items'
     * @method dasherize
     * @param {String} str The string to dasherize.
     * @return {String} the dasherized string.
     */
    dasherize(str: string): string;
    /**
     * Replaces spaces, or camelCase with dashes.
     * @method dashNunderscorize
     * @param {String} str The string to dasherize.
     * @return {String} the dasherized string.
     */
    dashNunderscorize(str: string): string;
    /**
     * Returns the lowerCamelCase form of a string.
     * camelize('innerHTML');          // 'innerHTML'
     * camelize('action_name');        // 'actionName'
     * camelize('css-class-name');     // 'cssClassName'
     * camelize('my favorite items');  // 'myFavoriteItems'
     * camelize('My Favorite Items');  // 'myFavoriteItems'
     * @method camelize
     * @param {String} str The string to camelize.
     * @return {String} the camelized string.
     */
    camelize(str: string): string;
    /**
     * Returns the UpperCamelCase form of a string.
     * 'innerHTML'.classify();          // 'InnerHTML'
     * 'action_name'.classify();        // 'ActionName'
     * 'css-class-name'.classify();     // 'CssClassName'
     * 'my favorite items'.classify();  // 'MyFavoriteItems'
     * @method classify
     * @param {String} str the string to classify
     * @return {String} the classified string
     */
    classify(str: string): string;
    /**
     * More general than decamelize. Returns the lower\_case\_and\_underscored form of a string.
     * 'innerHTML'.underscore();          // 'inner_html'
     * 'action_name'.underscore();        // 'action_name'
     * 'css-class-name'.underscore();     // 'css_class_name'
     * 'my favorite items'.underscore();  // 'my_favorite_items'
     * @method underscore
     * @param {String} str - The string to underscore.
     * @return {String} the underscored string.
     */
    underscore(str: string): string;
    /**
     * Convert multiple spaces to single space.
     * @method underscore
     * @param {String} str - The string to convert multiple spaces to single space.
     */
    convertMultipleSpacesToSingleSpace(str: string): string;
    /**
     * Returns the Capitalized form of a string
     * 'innerHTML'.capitalize()         // 'InnerHTML'
     * 'action_name'.capitalize()       // 'Action_name'
     * 'css-class-name'.capitalize()    // 'Css-class-name'
     * 'my favorite items'.capitalize() // 'My favorite items'
     * @method capitalize
     * @param {String} str - The string to capitalize.
     * @return {String} The capitalized string.
     */
    capitalize(str: string): string;
    /**
     * Returns the Capitalized form for each word of a string
     * @method capitalize each word
     * @param {String} str The string to capitalize.
     * @return {String} The capitalized string.
     */
    capitalizeEachWord(str: string, chrChange?: string): string;
    /**
     * Returns the Capitalized form for each word of a string
     * @method capitalize each word
     * @param {String} str The string to capitalize.
     * @return {String} The capitalized string.
     */
    capitalizeEachWordWithSpaces(str: string): string;
}
